#
# Cvt Package configuration file
# More info at https://github.com/DrorHarari/keypirinha-cvt/
#

[main]
# Plugin's main configuration section.

# Troubleshooting conversions (useful when trying to customize)
#debug = false

# Cvt can work with numbers formatted according the active locale. The options are:
# decimal_separator = 
#   * dot
#     The is the default, locale is ignored. The decimal separator is a period and
#     no thousands separator is used.
#   * comma
#     Decimal separator of comma is used for input and clipboard output. Thousands
#     are separated with a space.
#   * auto
#     Use the Windows regional settings for the decimal separator and thousands
#	  separator (only dot and commas are supported on input). When copying
#     the result to the clipboard, no thousands separator is produced, just the 
#     decimal separator.
#
#decimal_separator=dot

# Adding custom measurements and units
#
# Cvt uses a built-in measurement definition file called cvtdefs.json
# You obtain a copy in the User folder by entering the "Cvt: Customize
# coversions" action in the Keypirinha box. You can customize this file
# and as long as it exists, Cvt will use it rather than the built-in 
# one. 
# 
# The recommended way to customize measurements is to add a 'definitions'
# item in the main section pointing to a conversion definition file to
# load. Note that conversion definitions loaded via this 'definition'
# item are added to the existing definition, they are not replacing them.
#
# The Reload command is added for convenience to update the measurements
# when the definition was changed outside.
#
# definitions=
#	custom-file-1.json
#	custom-file-2.json

# Adding a custom measure is possible by adding a section to this file in the 
# following format:
#
# [measure/{measure name}]
# desc = {short-description of the measure}

# Adding a custom unit to existing measurement is possible by adding a section to 
# this file in the following format:
#
# [unit/{measure name}/{unit name}]
# factor = {expression to multiple the main unit by to get this unit}
# aliases = {comma separate additional aliases}
# offset = {number to substract after multiplying by factor}
# inverse = {if true use the inverse of the factor}
#
# To add a "Finger" distance unit which is equivalent to 2 cm with the alias 
# 'fg' we can use the following definition (note that for Distance, the main 
# unit is meter as can be seen by typing DISTANCE+<tab> in Keypirinha)
#
#[unit/Distance/Finger]
#factor = 2/100
#aliases = fg

#
# To add an alias "hdm" for Centimeters unit of distance measure use the
# following (note that the unit must be specified with exdact case):
#
#[unit/distance/Centimetres]
#aliases = hdm


[var]
# As in every Keypirinha's configuration file, you may optionally include a
# [var] section to declare variables that you want to reuse anywhere else in
# this file.
#
# Note that the [var] section is inherited, which means that any value defined
# in the main configuration file (i.e. this file) will be propagated to
# subsequently loaded configuration files (packages' configuration files).
#
